# print=(123)
# word="hello liu"
# print(word)

#在使用pycharm的时候，如果要将脚本当中的某些内容进行注释要遵循如下的方法
#python当中，注释内容，用#＃号，＃号在任意位置出现都会将它后面的同一行内容变为注释
#print（"这句命令后面，我就要用到注释"）#看，这里开始就是注释信息，不会影响前面的代码
"""
注释还有另外的方法，如果我们需要注释
多行内容。在python当中用前后三个双引号或单引号包裹的
要注释的内容即可。正如同我们这句话，就是用三个双引号来包裹的
"""
#在pycharm这个软件当中，我们注释脚本内容更加的方便一些
# 有快捷键ctrl+/。这个快捷键可以注释单行也可以一下注释多行内容。
#如果想要注释哪一行（或多行内容），则将鼠标的光标选中要注释的行，然后按下快捷键即可

#print()用来在python程序当中进行输出操作
#它是python的一个内置函数
#我们在学习python的过程当中，会接触到很多内置函数
#函数又叫做方法，由函数名print和圆括号()组成
#我们平常使用的print()的时候叫做函数的调用
#在圆括号当中，我们可以向被调用的函数内传递参数（根据不同函数当中不同的
# 定义来决定一个函数在被调用的时候应该传递多少参数）
#实际上我们子啊调用print（）这个函数的时候，圆括号内写入的内容就是作为参数
#交给print这个函数体本身进行处理，在函数本身接收到我们写在圆括号内的内容后
# 有特定的代码来决定将其进行何种处理
# print()的圆括号里可以写数字，字符串或者变量名，甚至可以写另外的函数名称
# 它可以打印输出数字，字符，变量值，以及其他函数的运算结果
# abc=123
# print(abc)
# #为了验证print()能够打印其它函数的运算结果。我们先学习另外的一个函数
# #type()，这个函数用来判断圆括号内写入的数据的数据类型
# #在所有的编程语言当中，都一定存在两种数据类型，string字符串和int整型数字
# print(type(abc))#用print()函数输出另一个函数type()的运算结果

# 在pathon当中，有哪些数据类型？
# 六大数据类型
# number数据类型
# string字符串类型
# list列表
# set集合
# tuple元组
# dictionary字典

# 先简单了解数据的类型
# number数字类型
# 可以进行运算，分为整型数字int，浮点型数字float，
# 复数，布尔值（0或1分别表示True（真）或Falsr（假））
# 在输出数字类型或者给变量赋值为数字类型数据的时候
# 我们直接使用数字即可，不用写引号来包裹属数字内容
# num=123#给变量num赋值为一个数字类型的值123

# 如果使用引号包裹了数字内容，那么这个数字就变成了字符串
# 字符串
# 使用单引号或双引号包裹的内容，可以是文字，也可以是数字
# zfc=“123”#设置变量zfc并给他赋值为字符串类型值“123”
# 字符串类型的值，既是内容是阿拉伯数字，也不能用于数学运算
# 在python当中，单双引号包裹的都是字符串，没有区分（）
#
# 我们来定义一个字符串
#zf="这是一个字符串，有16个字符组成"
# 在输出的时候，我们一般来说是将整个字符串完整的输出
#print(zf)#输出承载了字符串类型值得zf变量完整得内容
#如果我想要输出这个字符串当中得某一段内容或者某一个字符
#怎么办？
#字符串中得每一个字符都对应了一个索引值


# 如果我想要输出这个字符串当中的某一段内容或者某一个字符
# 由后至前顺序： -16  -15  -14 -13  -12  -11  -10  -9  -8   -7   -6   -5   -4   -3  -2   -1
# 由前至后顺序：  0    1   2    3    4    5    6    7   8    9   10   11   12   13  14   15
#             | 这 | 是 | 一 | 个 | 字 | 符 | 串  | ，| 由 | 16 | 个 | 字 | 符 | 串 | 组 | 成 |
#由前至后顺序：   1    2   3    4    5    6    7    8   9    10   11   12  13   14   15  16
#由后至前顺序：   -15  -14 -13  -12  -11  -10  -9   -8  -7   -6   -5   -4  -3   -2   -1  0

#截取值
# 如果我们想要单独输出这个字符串当中的某一个字符
# 那么就用到索引值了，如下：
#print(zf[1])
# 如果我想要输出第二个字符到第八个字符内容
#print(zf[1:8])
#如果想要从第九个字符开始输出到最后一个字符，怎么写
#print(zf[8:])

# #列表
# 列表是由多个元素内容组成的，它的组成成员可以是数字，字符串，变量函数，甚至是另外一个列表（列表的嵌套）
# 函数，甚至是另外一个列表（列表的嵌套），成员与成员之间用逗号间隔
# 如何定义一个列表
#listA=[123,'字符串成员',zf]
#print(listA)#输出一个完整的列表
# 如果想要输出单独其中一个元素或某一段元素内容，则也用到索引下标
# 和截取值得方式
# 比如我们打印输出第一个元素
#print(listA[0])#打印第一个元素内容
#如果想打印输出第一个和第三个成员，怎么办
#print(listA[0])
#定义一个嵌套列表，在listB列表中得第三个成员是listA列表
#listB=[321,567,listA]
#这个时候，我们输出listB会是什么样子
#print(listB)
#如果想要输出listB列表中第三个成员得第二个元素怎么办
#print(listB[2][1])

#列表中常用的方法
# .append()方法
#lb=[2,4,5,67]
# #如果我想在这个列表得后面扩充一个内容就可以用到append()方法
#lb.append('新内容')#在列表的最后添加一个元素其值为'新内容'
#print(lb)
# #.remove(方法用来移除列表中指定值得内容)
#lb.remove(67)#移除列表中值为67的内容
#print(lb)
# #.pop()方法用来移除列表中指定下标成员
#lb.pop(2)#移除下标2的成员
#print(lb)
# #.index()方法,根据指定的内容反馈该内容在列表中的索引下标
# # 直接使用是不会将结果打印输出的，需要配合print()或者将结果赋值给另外的一个变量承载
#print(lb.index(2))
# #lb.insert()方法就是插入方法，插入什么呢？插入在哪里呢？
# #格式.insert(往那个索引下标位置插入，插入什么进去)
#lb.insert(2,'试试')
#print(lb)

#dictionary字典数据类型
# 字典与列表其实差不多，但是区别在于
# 字典是没有索引下标的
# 它是由多个键值对组成的
# 什么叫做键值对呢？
# 我们先来看看字典是怎么定义的
#lb=[1,2,3]
#dic={'key1':'lb','键2':'值2','key3':'值3'}
# # 如何输出字典的值，要通过键来输出
#print(dic['key1'])#输出key1对应的值
# #如何知道一个字典有哪些key呢？
#print(dic.keys())#输出指定字典的所有键
# 要注意的是，字典也是可以嵌套的，它的值同样也可以是不同种类类型的数据

# python的输入
#input()函数用来进行输入操作
#当你调用这个函数的时候，程序会让用户输入内容
#我们试一下：
#input()
# 我们通过上面的实例发现，如果单独使用input()函数，程序不会有任何的提示信息给我们，这样用户也就不知道要干什么
# 并且在我们进行了输入操作后，按下了回车键提交输入的内容后，程序结束了
# 我们输入内容一般来讲一i的那个是为了做什么事情，那么必然要有一个变量来承载我们输入的结果
# 那么如何让我们的input()函数具备提示信息，并且将其赋值给一个变量呢？
# 这么写就行！
#bl=input("随便输入点什么把：")
#print('您刚才输入的内容是:',bl)


# 尝试一下：
# 创建一个字典，该字典有六组键值对儿，
# 六个键分别为：username userpass address tel gender age
# 让用户分别输入用户名，密码，地址，电话，性别，年龄
# 为这六个键对应的值赋值
a=input('username:')
b=input('userpass:')
c=input('address:')
d=input('tel:')
e=input('genber:')
f=input('age:')
aa={'username': a ,'userpass':b,'address':c,'tel':d,'genber':e,'age':f}
print(aa)

#尝试第二个：
#创建一个列表，其值为[2019,12,02]
#将第一道题中得字典插入到该列表中的第三个元素位置
#在该列表的最后添加新的内容，值为'heihei'
#输出这个列表中第三个元素内容当中的地址信息
bb=[2019,12,2]
bb.insert(2,aa)
print(bb)
bb.append('heihei')
print(bb[2]['tel'])
print(aa)
print(bb)



